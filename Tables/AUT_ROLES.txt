
  CREATE TABLE "INTERSTELLARCAR_DB"."AUT_ROLES" 
   (	"RLE_ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
	"RLE_NAME" VARCHAR2(50 BYTE) NOT NULL ENABLE, 
	"RLE_DESCRIPTION" VARCHAR2(200 BYTE), 
	"RLE_CREATED_DATE" DATE NOT NULL ENABLE, 
	"RLE_CREATED_BY" VARCHAR2(50 BYTE) NOT NULL ENABLE, 
	"RLE_MODIFIED_DATE" DATE, 
	"RLE_MODIFIED_BY" VARCHAR2(50 BYTE), 
	 PRIMARY KEY ("RLE_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "USERS"  ENABLE, 
	 CONSTRAINT "AUT_RLE_UK1" UNIQUE ("RLE_NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "USERS"  ENABLE
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;

  CREATE OR REPLACE EDITIONABLE TRIGGER "INTERSTELLARCAR_DB"."AUT_RLE_BIUR" 
  before insert or update on aut_roles for each row
declare
  -- start custom declare
  -- end custom declare
begin
  --
  if    inserting
  then
    --
    :new.rle_created_by     := nvl( v('APP_USER'), user);
    :new.rle_created_date   := sysdate;
    --
    null;
    --
    -- start custom inserting
    -- end custom inserting
    --
  elsif updating
  then
    --
    :new.rle_modified_by    := nvl( v('APP_USER'), user);
    :new.rle_modified_date  := sysdate;
    --
    null;
    --
    -- start custom updating
    -- end custom updating
    --
  end if;
  --
  -- start custom body
  -- end custom body
  --
end aut_rle_biur;

/
ALTER TRIGGER "INTERSTELLARCAR_DB"."AUT_RLE_BIUR" ENABLE;

